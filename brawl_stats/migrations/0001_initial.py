# Generated by Django 5.0.14 on 2025-04-23 02:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Brawler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('rarity', models.CharField(choices=[('CO', 'Common'), ('RA', 'Rare'), ('SR', 'Super Rare'), ('EP', 'Epic'), ('MY', 'Mythic'), ('LE', 'Legendary'), ('CH', 'Chromatic')], default='CO', max_length=2)),
                ('brawler_type', models.CharField(choices=[('DD', 'Damage Dealer'), ('TK', 'Tank'), ('AS', 'Assassin'), ('SU', 'Support'), ('CN', 'Controller'), ('AR', 'Artillery')], max_length=2)),
                ('description', models.TextField(blank=True)),
                ('image_url', models.URLField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='GameMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('objective', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('environment', models.CharField(blank=True, max_length=100)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('game_mode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maps', to='brawl_stats.gamemode')),
            ],
            options={
                'ordering': ['game_mode', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TierList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tier_lists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TierListEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tier', models.CharField(choices=[('S', 'S Tier'), ('A', 'A Tier'), ('B', 'B Tier'), ('C', 'C Tier'), ('D', 'D Tier'), ('F', 'F Tier')], max_length=1)),
                ('notes', models.TextField(blank=True, help_text="Optional notes about this brawler's placement.")),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tier_entries', to='brawl_stats.brawler')),
                ('tier_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entries', to='brawl_stats.tierlist')),
            ],
            options={
                'ordering': ['tier_list', 'tier', 'brawler'],
                'unique_together': {('tier_list', 'brawler')},
            },
        ),
    ]
